name: CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci
      - name: Run ESLint
        run: |
          npm run lint
          cd client && npm run lint

  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: kestrel
          POSTGRES_PASSWORD: kestrel123
          POSTGRES_DB: kestrel_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci
      - name: Setup Database
        run: |
          npx prisma migrate deploy
          npx prisma generate
        env:
          DATABASE_URL: postgresql://kestrel:kestrel123@localhost:5432/kestrel_test
      - name: Run tests
        run: |
          npm test
          cd client && npm test
        env:
          NODE_ENV: test
          DATABASE_URL: postgresql://kestrel:kestrel123@localhost:5432/kestrel_test
          JWT_SECRET: ${{ secrets.JWT_SECRET }}

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci
      - name: Build
        run: |
          npm run build
          cd client && npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }} 