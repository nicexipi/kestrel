name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ${{ secrets.DOCKER_HUB_USERNAME }}/kestrel

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: kestrel
          POSTGRES_PASSWORD: kestrel123
          POSTGRES_DB: kestrel_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm ci
        cd client && npm ci

    - name: Setup Database
      run: |
        npx prisma migrate deploy
        npx prisma generate
      env:
        DATABASE_URL: postgresql://kestrel:kestrel123@localhost:5432/kestrel_test

    - name: Run Backend Linting
      run: npm run lint

    - name: Run Frontend Linting
      run: cd client && npm run lint

    - name: Run Tests
      run: npm test
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://kestrel:kestrel123@localhost:5432/kestrel_test
        JWT_SECRET: ${{ secrets.JWT_SECRET }}

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ${{ env.DOCKER_IMAGE }}:latest
          ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        build-args: |
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          JWT_SECRET=${{ secrets.JWT_SECRET }} 